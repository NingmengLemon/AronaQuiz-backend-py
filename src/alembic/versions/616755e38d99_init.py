"""init

Revision ID: 616755e38d99
Revises: 
Create Date: 2025-10-15 04:47:49.681042

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
import sqlmodel.sql
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = '616755e38d99'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('problemset',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('nickname', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('role', sa.Enum('USER', 'ADMIN', 'SU', name='userrole'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('nickname'),
    sa.UniqueConstraint('username')
    )
    op.create_table('login_session',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('access_token', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_renewal', sa.DateTime(), nullable=False),
    sa.Column('last_active', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'REVOKED', 'KICKED', 'EXPIRED', 'INVALID', name='loginsessionstatus'), nullable=False),
    sa.Column('device_info', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('refresh_token_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('refresh_token_expires_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('problem',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type', sa.Enum('single_select', 'multi_select', name='problemtype'), nullable=False),
    sa.Column('problemset_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['problemset_id'], ['problemset.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('answer_record',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('problem_id', sa.Uuid(), nullable=False),
    sa.Column('correct_count', sa.Integer(), nullable=False),
    sa.Column('total_count', sa.Integer(), nullable=False),
    sa.Column('last_attempt', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['problem_id'], ['problem.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'problem_id')
    )
    op.create_table('option',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.Column('problem_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['problem_id'], ['problem.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('option')
    op.drop_table('answer_record')
    op.drop_table('problem')
    op.drop_table('login_session')
    op.drop_table('user')
    op.drop_table('problemset')
    # ### end Alembic commands ###
